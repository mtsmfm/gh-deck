apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      annotations:
        buildID: {{ .Values.buildID }}
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "fullname" . }}
    spec:
      containers:
      - &main
        name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        stdin: true
        tty: true
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
        {{ if .Values.mountLocal }}
        volumeMounts:
        - name: approot
          mountPath: /app
        {{ end }}
        env:
        - name: GITHUB_CLIENT_ID
          value: {{ .Values.githubClientId }}
        - name: GITHUB_CLIENT_SECRET
          value: {{ .Values.githubClientSecret }}
        {{ if .Values.databaseUrl }}
        - name: DATABASE_URL
          value: {{ .Values.databaseUrl }}
        {{ end }}
        {{ if .Values.databaseHost }}
        - name: DATABASE_HOST
          value: {{ .Values.databaseHost }}
        {{ end }}
        {{ if .Values.databaseUser }}
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.databaseUser.secretKeyRef.name }}
              key: {{ .Values.databaseUser.secretKeyRef.key }}
        {{ end }}
        {{ if .Values.databasePassword }}
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.databasePassword.secretKeyRef.name }}
              key: {{ .Values.databasePassword.secretKeyRef.key }}
        {{ end }}
        {{ if .Values.railsEnv }}
        - name: RAILS_ENV
          value: {{ .Values.railsEnv }}
        {{ end }}
        {{ if .Values.secretKeyBase }}
        - name: SECRET_KEY_BASE
          value: {{ .Values.secretKeyBase }}
        {{ end }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 5
          periodSeconds: 10
      {{ if .Values.console.enabled }}
      - <<: *main
        name: {{ .Chart.Name }}-console
        command: ['sh', '-c', 'while true; do sleep 1; done']
        ports: []
      {{ end }}
      {{ if .Values.webpackDevServer.enabled }}
      - <<: *main
        name: {{ .Chart.Name }}-webpack-dev-server
        command: ['bin/webpack-dev-server']
        ports:
        - containerPort: {{ .Values.webpackDevServer.internalPort }}
      {{ end }}
      {{ if .Values.relayCompiler.enabled }}
      - <<: *main
        name: {{ .Chart.Name }}-relay-compiler
        command: ['yarn', 'run', 'relay', '--', '--watch']
        ports: []
      {{ end }}
      {{ if .Values.mountLocal }}
      volumes:
      - name: approot
        hostPath:
          path: {{ .Values.currentDir }}
      {{ end }}
{{ if .Values.postgres.enabled }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-postgres
  labels:
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      annotations:
        buildID: {{ .Values.buildID }}
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "fullname" . }}-postgres
    spec:
      containers:
      - name: {{ .Chart.Name }}-postgres
        image: postgres:10.3-alpine
        volumeMounts:
        - name: pg-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: pg-data
        persistentVolumeClaim:
          claimName: pv0001
{{ end }}
{{ if .Values.databaseInstance }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-cloudsql-proxy
  labels:
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        buildID: {{ .Values.buildID }}
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "fullname" . }}-cloudsql-proxy
    spec:
      containers:
      - name: {{ .Chart.Name }}-cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy", "-instances={{ .Values.databaseInstance.name }}=tcp:0.0.0.0:{{ .Values.databaseInstance.port }}", "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
{{ end }}
